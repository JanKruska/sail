#!/bin/bash
#SBATCH --partition=any
#SBATCH --time=12:00:00
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=64
#SBATCH --mem=120G
#SBATCH --output=slurm.%j.out   
#SBATCH --error=slurm.%j.err    

module load openmpi/gnu
module load mpitools/default
module load gcc/default

source ~/OpenFOAM-plus/etc/bashrc

echo "Number of tasks: " 
echo $SLURM_NTASKS
set -e #Exit if any command returns non-zero exit value

start=`date +%s`

. $WM_PROJECT_DIR/bin/tools/RunFunctions

## generate mesh
runApplication blockMesh
runApplication surfaceFeatureExtract
runApplication decomposePar

runParallel snappyHexMesh -overwrite 

meshTime=`date +%s`
echo "$((meshTime-start))" >> mesh.timing


# runApplication decomposePar

## Copy initial conditions
ls -d processor* | xargs -I {} rm -rf ./{}/0
ls -d processor* | xargs -I {} cp -r 0org ./{}/0
cp -r 0org 0


runParallel patchSummary
runParallel potentialFoam
runParallel $(getApplication)

cfdEnd=`date +%s`
echo "$((cfdEnd-cfdStart))" >> cfd.timing

runApplication reconstructParMesh -constant
runApplication reconstructPar -latestTime

# Return results
cp postProcessing/forceCoeffs1/0/coefficient.dat result.dat
#cp postProcessing/velo/0/force.dat force.dat
#cp postProcessing/velo/0/moment.dat moment.dat

end=`date +%s`
echo "$((end-start))" >> all.timing
